"""Add user profile and experiences tables

Revision ID: 5000f3fd652b
Revises: 59994aa2a6eb
Create Date: 2025-07-23 16:11:52.733544

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5000f3fd652b'
down_revision: Union[str, None] = '59994aa2a6eb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('assessment_applications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_assessment_status'))
        batch_op.drop_index(batch_op.f('idx_assessment_student'))

    op.drop_table('assessment_applications')
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_students_num'))

    op.drop_table('students')
    op.drop_table('bs_enter_workstation')
    op.drop_table('related_scien_res')
    with op.batch_alter_table('bs_education_experience', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bs_education_experience_id'), ['id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='chk-个人信息-教育经历\r\n'
    )

    with op.batch_alter_table('bs_pre_entry_book', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_book_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_book_user_id'), ['user_id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='著作信息\r\n'
    )

    with op.batch_alter_table('bs_pre_entry_competition_award', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_competition_award_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_competition_award_user_id'), ['user_id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='竞赛获奖信息'
    )

    with op.batch_alter_table('bs_pre_entry_conference', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('是否境外',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=16),
               existing_nullable=True)
        batch_op.alter_column('联系人电话',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_conference_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_conference_user_id'), ['user_id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='学术会议信息'
    )

    with op.batch_alter_table('bs_pre_entry_industry_standard', schema=None) as batch_op:
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_bs_pre_entry_industry_standard_user_id'))
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_industry_standard_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_industry_standard_user_id'), ['user_id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='行业标准信息'
    )

    with op.batch_alter_table('bs_pre_entry_new_variety', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_new_variety_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_new_variety_user_id'), ['user_id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='新品种类型信息'
    )

    with op.batch_alter_table('bs_pre_entry_paper', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_paper_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_paper_user_id'), ['user_id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='学术论文信息'
    )

    with op.batch_alter_table('bs_pre_entry_patent', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_patent_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_patent_user_id'), ['user_id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='专利信息\r\n'
    )

    with op.batch_alter_table('bs_pre_entry_project', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('项目编号',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('项目名称',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('项目类型',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('是否和学位论文相关',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('项目层次',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('是否结项',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('项目执行状态',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('本人角色',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('参与者总数',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_project_time'))
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_project_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_project_user_id'), ['user_id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='项目信息'
    )

    with op.batch_alter_table('bs_pre_entry_subject_research', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=None,
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_subject_research_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_subject_research_user_id'), ['user_id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='课题研究信息'
    )

    with op.batch_alter_table('bs_user_profile', schema=None) as batch_op:
        batch_op.add_column(sa.Column('otherachievements', sa.Text(), nullable=True))
        batch_op.alter_column('is_religious_staff',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_bs_user_profile_id'), ['id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='chk-个人信息\r\n'
    )

    with op.batch_alter_table('bs_work_experience', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bs_work_experience_id'), ['id'], unique=False)
        batch_op.drop_table_comment(
        existing_comment='chk-个人信息-工作经历\r\n'
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bs_work_experience', schema=None) as batch_op:
        batch_op.create_table_comment(
        'chk-个人信息-工作经历\r\n',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_work_experience_id'))

    with op.batch_alter_table('bs_user_profile', schema=None) as batch_op:
        batch_op.create_table_comment(
        'chk-个人信息\r\n',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_user_profile_id'))
        batch_op.alter_column('is_religious_staff',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=True)
        batch_op.drop_column('otherachievements')

    with op.batch_alter_table('bs_pre_entry_subject_research', schema=None) as batch_op:
        batch_op.create_table_comment(
        '课题研究信息',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_subject_research_user_id'))
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_subject_research_id'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('bs_pre_entry_project', schema=None) as batch_op:
        batch_op.create_table_comment(
        '项目信息',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_project_user_id'))
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_project_id'))
        batch_op.create_index(batch_op.f('ix_bs_pre_entry_project_time'), ['time'], unique=False)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('参与者总数',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=32),
               existing_nullable=True)
        batch_op.alter_column('本人角色',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=128),
               existing_nullable=True)
        batch_op.alter_column('项目执行状态',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=128),
               existing_nullable=True)
        batch_op.alter_column('是否结项',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=32),
               existing_nullable=True)
        batch_op.alter_column('项目层次',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=128),
               existing_nullable=True)
        batch_op.alter_column('是否和学位论文相关',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=32),
               existing_nullable=True)
        batch_op.alter_column('项目类型',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=128),
               existing_nullable=True)
        batch_op.alter_column('项目名称',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('项目编号',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=128),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('bs_pre_entry_patent', schema=None) as batch_op:
        batch_op.create_table_comment(
        '专利信息\r\n',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_patent_user_id'))
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_patent_id'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('bs_pre_entry_paper', schema=None) as batch_op:
        batch_op.create_table_comment(
        '学术论文信息',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_paper_user_id'))
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_paper_id'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('bs_pre_entry_new_variety', schema=None) as batch_op:
        batch_op.create_table_comment(
        '新品种类型信息',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_new_variety_user_id'))
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_new_variety_id'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('bs_pre_entry_industry_standard', schema=None) as batch_op:
        batch_op.create_table_comment(
        '行业标准信息',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_industry_standard_user_id'))
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_industry_standard_id'))
        batch_op.create_index(batch_op.f('idx_bs_pre_entry_industry_standard_user_id'), ['user_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)

    with op.batch_alter_table('bs_pre_entry_conference', schema=None) as batch_op:
        batch_op.create_table_comment(
        '学术会议信息',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_conference_user_id'))
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_conference_id'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('联系人电话',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)
        batch_op.alter_column('是否境外',
               existing_type=sa.String(length=16),
               type_=sa.VARCHAR(length=32),
               existing_nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('bs_pre_entry_competition_award', schema=None) as batch_op:
        batch_op.create_table_comment(
        '竞赛获奖信息',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_competition_award_user_id'))
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_competition_award_id'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('bs_pre_entry_book', schema=None) as batch_op:
        batch_op.create_table_comment(
        '著作信息\r\n',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_book_user_id'))
        batch_op.drop_index(batch_op.f('ix_bs_pre_entry_book_id'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               server_default=sa.text('CURRENT_TIMESTAMP'),
               existing_nullable=True)
        batch_op.alter_column('备注',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('time',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('bs_education_experience', schema=None) as batch_op:
        batch_op.create_table_comment(
        'chk-个人信息-教育经历\r\n',
        existing_comment=None
    )
        batch_op.drop_index(batch_op.f('ix_bs_education_experience_id'))

    op.create_table('related_scien_res',
    sa.Column('base_work', sa.TEXT(), autoincrement=False, nullable=True, comment='前期工作基础'),
    sa.Column('necessity_analysis', sa.TEXT(), autoincrement=False, nullable=True, comment='选题的必要性分析'),
    sa.Column('resplan_expected', sa.TEXT(), autoincrement=False, nullable=True, comment='研究规划及预期成果'),
    sa.Column('results', sa.TEXT(), autoincrement=False, nullable=True, comment='成果情况'),
    sa.Column('other_achievements', sa.TEXT(), autoincrement=False, nullable=True, comment='其他代表性成果'),
    sa.Column('academic_pursuits', sa.TEXT(), autoincrement=False, nullable=True, comment='学术理想与追求'),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='序号'),
    comment='相关科研情况填写'
    )
    op.create_table('bs_enter_workstation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False, comment='序号'),
    sa.Column('subject', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='一级学科'),
    sa.Column('postname', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='岗位名称'),
    sa.Column('posttask', sa.TEXT(), autoincrement=False, nullable=True, comment='岗位目标任务（拟解决的科学问题）'),
    sa.Column('postqualification', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='岗位资格条件'),
    sa.Column('cotutor', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='合作导师'),
    sa.Column('allitutor', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='挂靠导师'),
    sa.Column('remark', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='备注'),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='用户唯一id'),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    comment='博士后岗位信息表'
    )
    op.create_table('students',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('students_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('stu_num', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='学号'),
    sa.Column('stu_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='姓名'),
    sa.Column('cotutor', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='导师'),
    sa.Column('college', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='学院'),
    sa.Column('subject', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='研究方向'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='更新时间'),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='students_pkey'),
    sa.UniqueConstraint('stu_num', name='students_stu_num_key'),
    comment='学生基本信息表',
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_students_num'), ['stu_num'], unique=False)

    op.create_table('assessment_applications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('apply_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='申请时间'),
    sa.Column('process_status', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=True, comment='处理状态(0:待处理 1:通过 2:拒绝)'),
    sa.Column('node_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='节点名称'),
    sa.Column('assessment_res', sa.TEXT(), autoincrement=False, nullable=True, comment='考核结果'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('assessment_applications_student_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('assessment_applications_pkey')),
    comment='考核申请表'
    )
    with op.batch_alter_table('assessment_applications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_assessment_student'), ['student_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_assessment_status'), ['process_status'], unique=False)

    # ### end Alembic commands ###
