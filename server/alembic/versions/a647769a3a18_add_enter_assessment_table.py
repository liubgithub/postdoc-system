"""add_enter_assessment_table

Revision ID: a647769a3a18
Revises: e73e008a8ed7
Create Date: 2025-07-31 21:44:26.450770

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a647769a3a18'
down_revision: Union[str, None] = 'e73e008a8ed7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bs_enter_assessment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(length=255), nullable=False),
    sa.Column('project_source', sa.String(length=255), nullable=False),
    sa.Column('project_type', sa.String(length=255), nullable=False),
    sa.Column('approval_time', sa.String(length=255), nullable=False),
    sa.Column('project_fee', sa.String(length=255), nullable=False),
    sa.Column('project_task', sa.Text(), nullable=False),
    sa.Column('project_thought', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bs_enter_assessment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bs_enter_assessment_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bs_enter_assessment_user_id'), ['user_id'], unique=False)

  
